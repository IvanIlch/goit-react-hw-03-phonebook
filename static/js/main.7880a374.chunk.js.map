{"version":3,"sources":["components/form/Form.module.css","components/filter/Filter.module.css","components/contactList/ContactList.module.css","components/layuot/Layout.module.css","components/form/Form.js","components/filter/Filter.js","components/contactItem/ContactItem.js","components/contactList/ContactList.js","components/layuot/Layout.js","components/App.js","index.js"],"names":["module","exports","inicial_state","name","number","ContactForm","state","addToName","e","target","value","setState","handleSubmit","preventDefault","props","addToContacts","className","styles","form","this","type","placeholder","onChange","onClick","Component","Filter","searchContact","input","ContactItem","id","onDelete","ContactList","visibleContact","contacts","map","contact","Layout","children","container","App","filter","getVisibleContact","toLowerCase","includes","alert","find","prevState","uuidv4","prevProps","localStorage","setItem","JSON","stringify","contactsFromLS","getItem","parse","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7880a374.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2E5x4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2nFeC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__N23QW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__2QxOz\"};","import React, { Component } from \"react\";\r\nimport styles from \"./Form.module.css\";\r\n\r\nconst inicial_state = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport default class ContactForm extends Component {\r\n  state = { ...inicial_state };\r\n  addToName = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addToContacts(this.state);\r\n    this.setState({ ...inicial_state });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form}>\r\n        <label>\r\n          Name\r\n          <input\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Введіть ім'я\"\r\n            onChange={this.addToName}\r\n          ></input>\r\n        </label>\r\n        <label>\r\n          Phone\r\n          <input\r\n            value={this.state.number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Введіть телефон\"\r\n            onChange={this.addToName}\r\n          ></input>\r\n        </label>\r\n        <button type=\"submit\" onClick={this.handleSubmit}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ value, searchContact }) {\r\n  return (\r\n    <label>\r\n      Find contact by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        placeholder=\"Пошук\"\r\n        onChange={(e) => searchContact(e.target.value)}\r\n      ></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  searchContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactItem({ id, name, number, onDelete }) {\r\n  return (\r\n    <li>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" id={id} onClick={() => onDelete(id)}>\r\n        Видалити\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactItem from \"../contactItem/ContactItem\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nexport default function ContactList({ visibleContact, onDelete }) {\r\n  return (\r\n    <>\r\n      <ul className={styles.contacts}>\r\n        {visibleContact.map((contact) => (\r\n          <ContactItem\r\n            key={contact.id}\r\n            name={contact.name}\r\n            number={contact.number}\r\n            id={contact.id}\r\n            onDelete={onDelete}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  visibleContact: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Layout.module.css\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./form/Form\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Layout from \"./layuot/Layout\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const contactsFromLS = localStorage.getItem(\"contacts\");\r\n    if (contactsFromLS) {\r\n      this.setState({\r\n        contacts: JSON.parse(contactsFromLS),\r\n      });\r\n    }\r\n  }\r\n\r\n  searchContact = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContact = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  addToContacts = (state) => {\r\n    const { name, number } = state;\r\n    if (name === \"\" || number === \"\") {\r\n      alert(\"Заповніть всі поля\");\r\n    } else {\r\n      if (\r\n        this.state.contacts.find(\r\n          (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n        )\r\n      ) {\r\n        alert(`${name} вже є у списку контактів`);\r\n      } else {\r\n        this.setState((prevState) => {\r\n          return {\r\n            contacts: [\r\n              ...prevState.contacts,\r\n              { name: name, id: uuidv4(), number: number },\r\n            ],\r\n          };\r\n        });\r\n      }\r\n    }\r\n  };\r\n  onDelete = (id) => {\r\n    return this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const visibleContact = this.getVisibleContact();\r\n    return (\r\n      <Layout>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addToContacts={this.addToContacts} />\r\n        <h2>Contacts</h2>\r\n        {contacts.length > 0 ? (\r\n          <Filter value={filter} searchContact={this.searchContact} />\r\n        ) : (\r\n          <h3>Список контактів пустий</h3>\r\n        )}\r\n\r\n        {contacts.length > 0 && (\r\n          <ContactList\r\n            visibleContact={visibleContact}\r\n            onDelete={this.onDelete}\r\n          />\r\n        )}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}